AWSTemplateFormatVersion: 2010-09-09
Description: AWS CloudFormation for Configuration of VPC, Subnets, Route Tables

Parameters:
  PublicSubnetACIDR:
    Type: String
    Default: 10.0.1.0/24

  PublicSubnetBCIDR:
    Type: String
    Default: 10.0.2.0/24

  PrivateSubnetACIDR:
    Type: String
    Default: 10.0.3.0/24

  PrivateSubnetBCIDR:
    Type: String
    Default: 10.0.4.0/24

  PrivateSQLSubnetACIDR:
    Type: String
    Default: 10.0.5.0/24

  PrivateSQLSubnetBCIDR:
    Type: String
    Default: 10.0.6.0/24

  VpcCIDR:
    Type: String
    Default: 10.0.0.0/16

  InstanceType:
    Description: WebServer EC2 instance Type
    Type: String
    Default: t2.micro
    AllowedValues: [t2.micro]
    ConstraintDescription: must be a valid EC2 instance Type

  
Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDR
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
      InstanceTenancy: default
      Tags:
      - Key: Name
        Value: !Join ['',[!Ref "AWS::StackName", "-VPC"]]

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    DependsOn: VPC
  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  PublicSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PublicSubnetACIDR
      MapPublicIpOnLaunch: true
      Tags:
      - Key: Name
        Value: !Sub ${AWS::StackName}-Public-A

  PublicSubnetB:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PublicSubnetBCIDR 
      MapPublicIpOnLaunch: true
      Tags:
      - Key: Name
        Value: !Sub ${AWS::StackName}-Public-B

  PrivateSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PrivateSubnetACIDR 
      MapPublicIpOnLaunch: false
      Tags:
      - Key: Name
        Value: !Sub ${AWS::StackName}-Private-A

  PrivateSubnetB:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PrivateSubnetBCIDR   
      MapPublicIpOnLaunch: false 
      Tags:
      - Key: Name
        Value: !Sub ${AWS::StackName}-Private-B
  
  PrivateSQLSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PrivateSQLSubnetACIDR
      MapPublicIpOnLaunch: false
      AvailabilityZone: us-east-1a
      Tags:
      - Key: Name
        Value: !Sub ${AWS::StackName}-PrivateSQL-A

  PrivateSQLSubnetB:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PrivateSQLSubnetBCIDR
      MapPublicIpOnLaunch: false  
      AvailabilityZone: us-east-1b
      Tags:
      - Key: Name
        Value: !Sub ${AWS::StackName}-PrivateSQL-B

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: Public
  PublicRoute1:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway  
  
  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: Private
  
  PublicSubnetARouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnetA
      RouteTableId: !Ref PublicRouteTable
  PublicSubnetBRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnetB
      RouteTableId: !Ref PublicRouteTable
  PrivateSubnetARouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnetA
      RouteTableId: !Ref PrivateRouteTable
  PrivateSubnetBRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnetB
      RouteTableId: !Ref PrivateRouteTable

Outputs:
  VPC:
    Value: !Ref VPC
    Export:
      Name: !Sub "${AWS::StackName}-VPCID"
  InstanceType:
    Value: !Ref InstanceType
    Export:
      Name: !Sub "${AWS::StackName}-InstanceType"
  PublicSubnetA:
    Value: !Ref PublicSubnetA
    Export:
      Name: !Sub "${AWS::StackName}-PUBLICA"
  PublicSubnetB:
    Value: !Ref PublicSubnetB
    Export:
      Name: !Sub "${AWS::StackName}-PUBLICB"
  PrivateSubnetA:
    Value: !Ref PrivateSubnetA
    Export:
      Name: !Sub "${AWS::StackName}-PRIVATEA"
  PrivateSubnetB:
    Value: !Ref PrivateSubnetB
    Export:
      Name: !Sub "${AWS::StackName}-PRIVATEB"
  PrivateSQLSubnetA:
    Value: !Ref PrivateSQLSubnetA
    Export:
      Name: !Sub "${AWS::StackName}-SQLA"
  PrivateSQLSubnetB:
    Value: !Ref PrivateSQLSubnetB
    Export:
      Name: !Sub "${AWS::StackName}-SQLB"
  PublicSubnetACIDR:
    Value: !Ref PublicSubnetACIDR
    Export:
      Name: !Sub "${AWS::StackName}-PublicSubnetACIDR"

  